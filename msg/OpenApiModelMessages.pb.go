// Code generated by protoc-gen-go.
// source: OpenApiModelMessages.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// * OPEN API 2000 - 2999
type ProtoOAPayloadType int32

const (
	ProtoOAPayloadType_OA_AUTH_REQ                            ProtoOAPayloadType = 2000
	ProtoOAPayloadType_OA_AUTH_RES                            ProtoOAPayloadType = 2001
	ProtoOAPayloadType_OA_SUBSCRIBE_FOR_TRADING_EVENTS_REQ    ProtoOAPayloadType = 2002
	ProtoOAPayloadType_OA_SUBSCRIBE_FOR_TRADING_EVENTS_RES    ProtoOAPayloadType = 2003
	ProtoOAPayloadType_OA_UNSUBSCRIBE_FROM_TRADING_EVENTS_REQ ProtoOAPayloadType = 2004
	ProtoOAPayloadType_OA_UNSUBSCRIBE_FROM_TRADING_EVENTS_RES ProtoOAPayloadType = 2005
	ProtoOAPayloadType_OA_GET_SUBSCRIBED_ACCOUNTS_REQ         ProtoOAPayloadType = 2006
	ProtoOAPayloadType_OA_GET_SUBSCRIBED_ACCOUNTS_RES         ProtoOAPayloadType = 2007
	// gap: OA_EVENTS were there
	ProtoOAPayloadType_OA_CREATE_ORDER_REQ               ProtoOAPayloadType = 2013
	ProtoOAPayloadType_OA_EXECUTION_EVENT                ProtoOAPayloadType = 2016
	ProtoOAPayloadType_OA_CANCEL_ORDER_REQ               ProtoOAPayloadType = 2017
	ProtoOAPayloadType_OA_CLOSE_POSITION_REQ             ProtoOAPayloadType = 2018
	ProtoOAPayloadType_OA_AMEND_POSITION_SL_TP_REQ       ProtoOAPayloadType = 2019
	ProtoOAPayloadType_OA_AMEND_ORDER_REQ                ProtoOAPayloadType = 2020
	ProtoOAPayloadType_OA_SUBSCRIBE_FOR_SPOTS_REQ        ProtoOAPayloadType = 2021
	ProtoOAPayloadType_OA_SUBSCRIBE_FOR_SPOTS_RES        ProtoOAPayloadType = 2022
	ProtoOAPayloadType_OA_UNSUBSCRIBE_FROM_SPOTS_REQ     ProtoOAPayloadType = 2023
	ProtoOAPayloadType_OA_UNSUBSCRIBE_FROM_SPOTS_RES     ProtoOAPayloadType = 2024
	ProtoOAPayloadType_OA_GET_SPOT_SUBSCRIPTION_REQ      ProtoOAPayloadType = 2025
	ProtoOAPayloadType_OA_GET_SPOT_SUBSCRIPTION_RES      ProtoOAPayloadType = 2026
	ProtoOAPayloadType_OA_GET_ALL_SPOT_SUBSCRIPTIONS_REQ ProtoOAPayloadType = 2027
	ProtoOAPayloadType_OA_GET_ALL_SPOT_SUBSCRIPTIONS_RES ProtoOAPayloadType = 2028
	ProtoOAPayloadType_OA_SPOT_EVENT                     ProtoOAPayloadType = 2029
)

var ProtoOAPayloadType_name = map[int32]string{
	2000: "OA_AUTH_REQ",
	2001: "OA_AUTH_RES",
	2002: "OA_SUBSCRIBE_FOR_TRADING_EVENTS_REQ",
	2003: "OA_SUBSCRIBE_FOR_TRADING_EVENTS_RES",
	2004: "OA_UNSUBSCRIBE_FROM_TRADING_EVENTS_REQ",
	2005: "OA_UNSUBSCRIBE_FROM_TRADING_EVENTS_RES",
	2006: "OA_GET_SUBSCRIBED_ACCOUNTS_REQ",
	2007: "OA_GET_SUBSCRIBED_ACCOUNTS_RES",
	2013: "OA_CREATE_ORDER_REQ",
	2016: "OA_EXECUTION_EVENT",
	2017: "OA_CANCEL_ORDER_REQ",
	2018: "OA_CLOSE_POSITION_REQ",
	2019: "OA_AMEND_POSITION_SL_TP_REQ",
	2020: "OA_AMEND_ORDER_REQ",
	2021: "OA_SUBSCRIBE_FOR_SPOTS_REQ",
	2022: "OA_SUBSCRIBE_FOR_SPOTS_RES",
	2023: "OA_UNSUBSCRIBE_FROM_SPOTS_REQ",
	2024: "OA_UNSUBSCRIBE_FROM_SPOTS_RES",
	2025: "OA_GET_SPOT_SUBSCRIPTION_REQ",
	2026: "OA_GET_SPOT_SUBSCRIPTION_RES",
	2027: "OA_GET_ALL_SPOT_SUBSCRIPTIONS_REQ",
	2028: "OA_GET_ALL_SPOT_SUBSCRIPTIONS_RES",
	2029: "OA_SPOT_EVENT",
}
var ProtoOAPayloadType_value = map[string]int32{
	"OA_AUTH_REQ":                            2000,
	"OA_AUTH_RES":                            2001,
	"OA_SUBSCRIBE_FOR_TRADING_EVENTS_REQ":    2002,
	"OA_SUBSCRIBE_FOR_TRADING_EVENTS_RES":    2003,
	"OA_UNSUBSCRIBE_FROM_TRADING_EVENTS_REQ": 2004,
	"OA_UNSUBSCRIBE_FROM_TRADING_EVENTS_RES": 2005,
	"OA_GET_SUBSCRIBED_ACCOUNTS_REQ":         2006,
	"OA_GET_SUBSCRIBED_ACCOUNTS_RES":         2007,
	"OA_CREATE_ORDER_REQ":                    2013,
	"OA_EXECUTION_EVENT":                     2016,
	"OA_CANCEL_ORDER_REQ":                    2017,
	"OA_CLOSE_POSITION_REQ":                  2018,
	"OA_AMEND_POSITION_SL_TP_REQ":            2019,
	"OA_AMEND_ORDER_REQ":                     2020,
	"OA_SUBSCRIBE_FOR_SPOTS_REQ":             2021,
	"OA_SUBSCRIBE_FOR_SPOTS_RES":             2022,
	"OA_UNSUBSCRIBE_FROM_SPOTS_REQ":          2023,
	"OA_UNSUBSCRIBE_FROM_SPOTS_RES":          2024,
	"OA_GET_SPOT_SUBSCRIPTION_REQ":           2025,
	"OA_GET_SPOT_SUBSCRIPTION_RES":           2026,
	"OA_GET_ALL_SPOT_SUBSCRIPTIONS_REQ":      2027,
	"OA_GET_ALL_SPOT_SUBSCRIPTIONS_RES":      2028,
	"OA_SPOT_EVENT":                          2029,
}

func (x ProtoOAPayloadType) Enum() *ProtoOAPayloadType {
	p := new(ProtoOAPayloadType)
	*p = x
	return p
}
func (x ProtoOAPayloadType) String() string {
	return proto.EnumName(ProtoOAPayloadType_name, int32(x))
}
func (x *ProtoOAPayloadType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProtoOAPayloadType_value, data, "ProtoOAPayloadType")
	if err != nil {
		return err
	}
	*x = ProtoOAPayloadType(value)
	return nil
}
func (ProtoOAPayloadType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

// * Supported order types
type ProtoOAOrderType int32

const (
	ProtoOAOrderType_OA_MARKET       ProtoOAOrderType = 1
	ProtoOAOrderType_OA_LIMIT        ProtoOAOrderType = 2
	ProtoOAOrderType_OA_STOP         ProtoOAOrderType = 3
	ProtoOAOrderType_OA_PROTECTION   ProtoOAOrderType = 4
	ProtoOAOrderType_OA_MARKET_RANGE ProtoOAOrderType = 5
)

var ProtoOAOrderType_name = map[int32]string{
	1: "OA_MARKET",
	2: "OA_LIMIT",
	3: "OA_STOP",
	4: "OA_PROTECTION",
	5: "OA_MARKET_RANGE",
}
var ProtoOAOrderType_value = map[string]int32{
	"OA_MARKET":       1,
	"OA_LIMIT":        2,
	"OA_STOP":         3,
	"OA_PROTECTION":   4,
	"OA_MARKET_RANGE": 5,
}

func (x ProtoOAOrderType) Enum() *ProtoOAOrderType {
	p := new(ProtoOAOrderType)
	*p = x
	return p
}
func (x ProtoOAOrderType) String() string {
	return proto.EnumName(ProtoOAOrderType_name, int32(x))
}
func (x *ProtoOAOrderType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProtoOAOrderType_value, data, "ProtoOAOrderType")
	if err != nil {
		return err
	}
	*x = ProtoOAOrderType(value)
	return nil
}
func (ProtoOAOrderType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

// * Open Api Execution Type
type ProtoOAExecutionType int32

const (
	ProtoOAExecutionType_OA_ORDER_ACCEPTED        ProtoOAExecutionType = 1
	ProtoOAExecutionType_OA_ORDER_FILLED          ProtoOAExecutionType = 2
	ProtoOAExecutionType_OA_ORDER_CANCELLED       ProtoOAExecutionType = 3
	ProtoOAExecutionType_OA_ORDER_EXPIRED         ProtoOAExecutionType = 4
	ProtoOAExecutionType_OA_ORDER_AMENDED         ProtoOAExecutionType = 5
	ProtoOAExecutionType_OA_ORDER_REJECTED        ProtoOAExecutionType = 6
	ProtoOAExecutionType_OA_ORDER_CANCEL_REJECTED ProtoOAExecutionType = 7
)

var ProtoOAExecutionType_name = map[int32]string{
	1: "OA_ORDER_ACCEPTED",
	2: "OA_ORDER_FILLED",
	3: "OA_ORDER_CANCELLED",
	4: "OA_ORDER_EXPIRED",
	5: "OA_ORDER_AMENDED",
	6: "OA_ORDER_REJECTED",
	7: "OA_ORDER_CANCEL_REJECTED",
}
var ProtoOAExecutionType_value = map[string]int32{
	"OA_ORDER_ACCEPTED":        1,
	"OA_ORDER_FILLED":          2,
	"OA_ORDER_CANCELLED":       3,
	"OA_ORDER_EXPIRED":         4,
	"OA_ORDER_AMENDED":         5,
	"OA_ORDER_REJECTED":        6,
	"OA_ORDER_CANCEL_REJECTED": 7,
}

func (x ProtoOAExecutionType) Enum() *ProtoOAExecutionType {
	p := new(ProtoOAExecutionType)
	*p = x
	return p
}
func (x ProtoOAExecutionType) String() string {
	return proto.EnumName(ProtoOAExecutionType_name, int32(x))
}
func (x *ProtoOAExecutionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProtoOAExecutionType_value, data, "ProtoOAExecutionType")
	if err != nil {
		return err
	}
	*x = ProtoOAExecutionType(value)
	return nil
}
func (ProtoOAExecutionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

type ProtoOAPositionStatus int32

const (
	ProtoOAPositionStatus_OA_POSITION_STATUS_OPEN    ProtoOAPositionStatus = 1
	ProtoOAPositionStatus_OA_POSITION_STATUS_CLOSED  ProtoOAPositionStatus = 2
	ProtoOAPositionStatus_OA_POSITION_STATUS_CREATED ProtoOAPositionStatus = 3
	ProtoOAPositionStatus_OA_POSITION_STATUS_ERROR   ProtoOAPositionStatus = 4
)

var ProtoOAPositionStatus_name = map[int32]string{
	1: "OA_POSITION_STATUS_OPEN",
	2: "OA_POSITION_STATUS_CLOSED",
	3: "OA_POSITION_STATUS_CREATED",
	4: "OA_POSITION_STATUS_ERROR",
}
var ProtoOAPositionStatus_value = map[string]int32{
	"OA_POSITION_STATUS_OPEN":    1,
	"OA_POSITION_STATUS_CLOSED":  2,
	"OA_POSITION_STATUS_CREATED": 3,
	"OA_POSITION_STATUS_ERROR":   4,
}

func (x ProtoOAPositionStatus) Enum() *ProtoOAPositionStatus {
	p := new(ProtoOAPositionStatus)
	*p = x
	return p
}
func (x ProtoOAPositionStatus) String() string {
	return proto.EnumName(ProtoOAPositionStatus_name, int32(x))
}
func (x *ProtoOAPositionStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProtoOAPositionStatus_value, data, "ProtoOAPositionStatus")
	if err != nil {
		return err
	}
	*x = ProtoOAPositionStatus(value)
	return nil
}
func (ProtoOAPositionStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

type ProtoOATrendbarPeriod int32

const (
	ProtoOATrendbarPeriod_M1  ProtoOATrendbarPeriod = 1
	ProtoOATrendbarPeriod_M2  ProtoOATrendbarPeriod = 2
	ProtoOATrendbarPeriod_M3  ProtoOATrendbarPeriod = 3
	ProtoOATrendbarPeriod_M4  ProtoOATrendbarPeriod = 4
	ProtoOATrendbarPeriod_M5  ProtoOATrendbarPeriod = 5
	ProtoOATrendbarPeriod_M10 ProtoOATrendbarPeriod = 6
	ProtoOATrendbarPeriod_M15 ProtoOATrendbarPeriod = 7
	ProtoOATrendbarPeriod_M30 ProtoOATrendbarPeriod = 8
	ProtoOATrendbarPeriod_H1  ProtoOATrendbarPeriod = 9
	ProtoOATrendbarPeriod_H4  ProtoOATrendbarPeriod = 10
	ProtoOATrendbarPeriod_H12 ProtoOATrendbarPeriod = 11
	ProtoOATrendbarPeriod_D1  ProtoOATrendbarPeriod = 12
	ProtoOATrendbarPeriod_W1  ProtoOATrendbarPeriod = 13
	ProtoOATrendbarPeriod_MN1 ProtoOATrendbarPeriod = 14
)

var ProtoOATrendbarPeriod_name = map[int32]string{
	1:  "M1",
	2:  "M2",
	3:  "M3",
	4:  "M4",
	5:  "M5",
	6:  "M10",
	7:  "M15",
	8:  "M30",
	9:  "H1",
	10: "H4",
	11: "H12",
	12: "D1",
	13: "W1",
	14: "MN1",
}
var ProtoOATrendbarPeriod_value = map[string]int32{
	"M1":  1,
	"M2":  2,
	"M3":  3,
	"M4":  4,
	"M5":  5,
	"M10": 6,
	"M15": 7,
	"M30": 8,
	"H1":  9,
	"H4":  10,
	"H12": 11,
	"D1":  12,
	"W1":  13,
	"MN1": 14,
}

func (x ProtoOATrendbarPeriod) Enum() *ProtoOATrendbarPeriod {
	p := new(ProtoOATrendbarPeriod)
	*p = x
	return p
}
func (x ProtoOATrendbarPeriod) String() string {
	return proto.EnumName(ProtoOATrendbarPeriod_name, int32(x))
}
func (x *ProtoOATrendbarPeriod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProtoOATrendbarPeriod_value, data, "ProtoOATrendbarPeriod")
	if err != nil {
		return err
	}
	*x = ProtoOATrendbarPeriod(value)
	return nil
}
func (ProtoOATrendbarPeriod) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

type ProtoOAPartnerDetails struct {
	PartnerName      *string `protobuf:"bytes,1,req,name=partnerName" json:"partnerName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProtoOAPartnerDetails) Reset()                    { *m = ProtoOAPartnerDetails{} }
func (m *ProtoOAPartnerDetails) String() string            { return proto.CompactTextString(m) }
func (*ProtoOAPartnerDetails) ProtoMessage()               {}
func (*ProtoOAPartnerDetails) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *ProtoOAPartnerDetails) GetPartnerName() string {
	if m != nil && m.PartnerName != nil {
		return *m.PartnerName
	}
	return ""
}

// * Represents an information about an order from execution event received from server
type ProtoOAOrder struct {
	OrderId                  *int64                       `protobuf:"varint,1,req,name=orderId" json:"orderId,omitempty"`
	AccountId                *int64                       `protobuf:"varint,2,req,name=accountId" json:"accountId,omitempty"`
	OrderType                *ProtoOAOrderType            `protobuf:"varint,3,req,name=orderType,enum=ProtoOAOrderType" json:"orderType,omitempty"`
	TradeSide                *ProtoTradeSide              `protobuf:"varint,4,req,name=tradeSide,enum=ProtoTradeSide" json:"tradeSide,omitempty"`
	SymbolName               *string                      `protobuf:"bytes,5,req,name=symbolName" json:"symbolName,omitempty"`
	ClosingOrder             *bool                        `protobuf:"varint,6,req,name=closingOrder" json:"closingOrder,omitempty"`
	RequestedVolume          *int64                       `protobuf:"varint,7,req,name=requestedVolume" json:"requestedVolume,omitempty"`
	ExecutedVolume           *int64                       `protobuf:"varint,8,opt,name=executedVolume" json:"executedVolume,omitempty"`
	ExecutionPrice           *float64                     `protobuf:"fixed64,9,opt,name=executionPrice" json:"executionPrice,omitempty"`
	LimitPrice               *float64                     `protobuf:"fixed64,10,opt,name=limitPrice" json:"limitPrice,omitempty"`
	StopPrice                *float64                     `protobuf:"fixed64,11,opt,name=stopPrice" json:"stopPrice,omitempty"`
	StopLossPrice            *float64                     `protobuf:"fixed64,12,opt,name=stopLossPrice" json:"stopLossPrice,omitempty"`
	TakeProfitPrice          *float64                     `protobuf:"fixed64,13,opt,name=takeProfitPrice" json:"takeProfitPrice,omitempty"`
	BaseSlippagePrice        *float64                     `protobuf:"fixed64,14,opt,name=baseSlippagePrice" json:"baseSlippagePrice,omitempty"`
	SlippageInPips           *int64                       `protobuf:"varint,15,opt,name=slippageInPips" json:"slippageInPips,omitempty"`
	RelativeStopLossInPips   *int32                       `protobuf:"varint,16,opt,name=relativeStopLossInPips" json:"relativeStopLossInPips,omitempty"`
	RelativeTakeProfitInPips *int32                       `protobuf:"varint,17,opt,name=relativeTakeProfitInPips" json:"relativeTakeProfitInPips,omitempty"`
	Commission               *int64                       `protobuf:"varint,18,opt,name=commission" json:"commission,omitempty"`
	OpenTimestamp            *int64                       `protobuf:"varint,19,opt,name=openTimestamp" json:"openTimestamp,omitempty"`
	CloseTimestamp           *int64                       `protobuf:"varint,20,opt,name=closeTimestamp" json:"closeTimestamp,omitempty"`
	ExpirationTimestamp      *int64                       `protobuf:"varint,21,opt,name=expirationTimestamp" json:"expirationTimestamp,omitempty"`
	Channel                  *string                      `protobuf:"bytes,22,opt,name=channel" json:"channel,omitempty"`
	Comment                  *string                      `protobuf:"bytes,23,opt,name=comment" json:"comment,omitempty"`
	ClosePositionDetails     *ProtoOAClosePositionDetails `protobuf:"bytes,24,opt,name=closePositionDetails" json:"closePositionDetails,omitempty"`
	ClientOrderId            *string                      `protobuf:"bytes,25,opt,name=clientOrderId" json:"clientOrderId,omitempty"`
	StopOut                  *bool                        `protobuf:"varint,26,opt,name=stopOut" json:"stopOut,omitempty"`
	XXX_unrecognized         []byte                       `json:"-"`
}

func (m *ProtoOAOrder) Reset()                    { *m = ProtoOAOrder{} }
func (m *ProtoOAOrder) String() string            { return proto.CompactTextString(m) }
func (*ProtoOAOrder) ProtoMessage()               {}
func (*ProtoOAOrder) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *ProtoOAOrder) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *ProtoOAOrder) GetAccountId() int64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *ProtoOAOrder) GetOrderType() ProtoOAOrderType {
	if m != nil && m.OrderType != nil {
		return *m.OrderType
	}
	return ProtoOAOrderType_OA_MARKET
}

func (m *ProtoOAOrder) GetTradeSide() ProtoTradeSide {
	if m != nil && m.TradeSide != nil {
		return *m.TradeSide
	}
	return ProtoTradeSide_BUY
}

func (m *ProtoOAOrder) GetSymbolName() string {
	if m != nil && m.SymbolName != nil {
		return *m.SymbolName
	}
	return ""
}

func (m *ProtoOAOrder) GetClosingOrder() bool {
	if m != nil && m.ClosingOrder != nil {
		return *m.ClosingOrder
	}
	return false
}

func (m *ProtoOAOrder) GetRequestedVolume() int64 {
	if m != nil && m.RequestedVolume != nil {
		return *m.RequestedVolume
	}
	return 0
}

func (m *ProtoOAOrder) GetExecutedVolume() int64 {
	if m != nil && m.ExecutedVolume != nil {
		return *m.ExecutedVolume
	}
	return 0
}

func (m *ProtoOAOrder) GetExecutionPrice() float64 {
	if m != nil && m.ExecutionPrice != nil {
		return *m.ExecutionPrice
	}
	return 0
}

func (m *ProtoOAOrder) GetLimitPrice() float64 {
	if m != nil && m.LimitPrice != nil {
		return *m.LimitPrice
	}
	return 0
}

func (m *ProtoOAOrder) GetStopPrice() float64 {
	if m != nil && m.StopPrice != nil {
		return *m.StopPrice
	}
	return 0
}

func (m *ProtoOAOrder) GetStopLossPrice() float64 {
	if m != nil && m.StopLossPrice != nil {
		return *m.StopLossPrice
	}
	return 0
}

func (m *ProtoOAOrder) GetTakeProfitPrice() float64 {
	if m != nil && m.TakeProfitPrice != nil {
		return *m.TakeProfitPrice
	}
	return 0
}

func (m *ProtoOAOrder) GetBaseSlippagePrice() float64 {
	if m != nil && m.BaseSlippagePrice != nil {
		return *m.BaseSlippagePrice
	}
	return 0
}

func (m *ProtoOAOrder) GetSlippageInPips() int64 {
	if m != nil && m.SlippageInPips != nil {
		return *m.SlippageInPips
	}
	return 0
}

func (m *ProtoOAOrder) GetRelativeStopLossInPips() int32 {
	if m != nil && m.RelativeStopLossInPips != nil {
		return *m.RelativeStopLossInPips
	}
	return 0
}

func (m *ProtoOAOrder) GetRelativeTakeProfitInPips() int32 {
	if m != nil && m.RelativeTakeProfitInPips != nil {
		return *m.RelativeTakeProfitInPips
	}
	return 0
}

func (m *ProtoOAOrder) GetCommission() int64 {
	if m != nil && m.Commission != nil {
		return *m.Commission
	}
	return 0
}

func (m *ProtoOAOrder) GetOpenTimestamp() int64 {
	if m != nil && m.OpenTimestamp != nil {
		return *m.OpenTimestamp
	}
	return 0
}

func (m *ProtoOAOrder) GetCloseTimestamp() int64 {
	if m != nil && m.CloseTimestamp != nil {
		return *m.CloseTimestamp
	}
	return 0
}

func (m *ProtoOAOrder) GetExpirationTimestamp() int64 {
	if m != nil && m.ExpirationTimestamp != nil {
		return *m.ExpirationTimestamp
	}
	return 0
}

func (m *ProtoOAOrder) GetChannel() string {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return ""
}

func (m *ProtoOAOrder) GetComment() string {
	if m != nil && m.Comment != nil {
		return *m.Comment
	}
	return ""
}

func (m *ProtoOAOrder) GetClosePositionDetails() *ProtoOAClosePositionDetails {
	if m != nil {
		return m.ClosePositionDetails
	}
	return nil
}

func (m *ProtoOAOrder) GetClientOrderId() string {
	if m != nil && m.ClientOrderId != nil {
		return *m.ClientOrderId
	}
	return ""
}

func (m *ProtoOAOrder) GetStopOut() bool {
	if m != nil && m.StopOut != nil {
		return *m.StopOut
	}
	return false
}

// * Represents an information about a position from execution event received from server
type ProtoOAPosition struct {
	PositionId       *int64                 `protobuf:"varint,1,req,name=positionId" json:"positionId,omitempty"`
	AccountId        *int64                 `protobuf:"varint,2,req,name=accountId" json:"accountId,omitempty"`
	PositionStatus   *ProtoOAPositionStatus `protobuf:"varint,3,req,name=positionStatus,enum=ProtoOAPositionStatus" json:"positionStatus,omitempty"`
	TradeSide        *ProtoTradeSide        `protobuf:"varint,4,req,name=tradeSide,enum=ProtoTradeSide" json:"tradeSide,omitempty"`
	SymbolName       *string                `protobuf:"bytes,5,req,name=symbolName" json:"symbolName,omitempty"`
	Volume           *int64                 `protobuf:"varint,6,req,name=volume" json:"volume,omitempty"`
	EntryPrice       *float64               `protobuf:"fixed64,7,req,name=entryPrice" json:"entryPrice,omitempty"`
	Swap             *int64                 `protobuf:"varint,8,opt,name=swap" json:"swap,omitempty"`
	Commission       *int64                 `protobuf:"varint,9,opt,name=commission" json:"commission,omitempty"`
	OpenTimestamp    *int64                 `protobuf:"varint,10,req,name=openTimestamp" json:"openTimestamp,omitempty"`
	CloseTimestamp   *int64                 `protobuf:"varint,11,opt,name=closeTimestamp" json:"closeTimestamp,omitempty"`
	StopLossPrice    *float64               `protobuf:"fixed64,12,opt,name=stopLossPrice" json:"stopLossPrice,omitempty"`
	TakeProfitPrice  *float64               `protobuf:"fixed64,13,opt,name=takeProfitPrice" json:"takeProfitPrice,omitempty"`
	Channel          *string                `protobuf:"bytes,14,opt,name=channel" json:"channel,omitempty"`
	Comment          *string                `protobuf:"bytes,15,opt,name=comment" json:"comment,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ProtoOAPosition) Reset()                    { *m = ProtoOAPosition{} }
func (m *ProtoOAPosition) String() string            { return proto.CompactTextString(m) }
func (*ProtoOAPosition) ProtoMessage()               {}
func (*ProtoOAPosition) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *ProtoOAPosition) GetPositionId() int64 {
	if m != nil && m.PositionId != nil {
		return *m.PositionId
	}
	return 0
}

func (m *ProtoOAPosition) GetAccountId() int64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *ProtoOAPosition) GetPositionStatus() ProtoOAPositionStatus {
	if m != nil && m.PositionStatus != nil {
		return *m.PositionStatus
	}
	return ProtoOAPositionStatus_OA_POSITION_STATUS_OPEN
}

func (m *ProtoOAPosition) GetTradeSide() ProtoTradeSide {
	if m != nil && m.TradeSide != nil {
		return *m.TradeSide
	}
	return ProtoTradeSide_BUY
}

func (m *ProtoOAPosition) GetSymbolName() string {
	if m != nil && m.SymbolName != nil {
		return *m.SymbolName
	}
	return ""
}

func (m *ProtoOAPosition) GetVolume() int64 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *ProtoOAPosition) GetEntryPrice() float64 {
	if m != nil && m.EntryPrice != nil {
		return *m.EntryPrice
	}
	return 0
}

func (m *ProtoOAPosition) GetSwap() int64 {
	if m != nil && m.Swap != nil {
		return *m.Swap
	}
	return 0
}

func (m *ProtoOAPosition) GetCommission() int64 {
	if m != nil && m.Commission != nil {
		return *m.Commission
	}
	return 0
}

func (m *ProtoOAPosition) GetOpenTimestamp() int64 {
	if m != nil && m.OpenTimestamp != nil {
		return *m.OpenTimestamp
	}
	return 0
}

func (m *ProtoOAPosition) GetCloseTimestamp() int64 {
	if m != nil && m.CloseTimestamp != nil {
		return *m.CloseTimestamp
	}
	return 0
}

func (m *ProtoOAPosition) GetStopLossPrice() float64 {
	if m != nil && m.StopLossPrice != nil {
		return *m.StopLossPrice
	}
	return 0
}

func (m *ProtoOAPosition) GetTakeProfitPrice() float64 {
	if m != nil && m.TakeProfitPrice != nil {
		return *m.TakeProfitPrice
	}
	return 0
}

func (m *ProtoOAPosition) GetChannel() string {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return ""
}

func (m *ProtoOAPosition) GetComment() string {
	if m != nil && m.Comment != nil {
		return *m.Comment
	}
	return ""
}

// * Represents additional details for the position which has been closed
type ProtoOAClosePositionDetails struct {
	EntryPrice                   *float64 `protobuf:"fixed64,1,req,name=entryPrice" json:"entryPrice,omitempty"`
	Profit                       *int64   `protobuf:"varint,2,req,name=profit" json:"profit,omitempty"`
	Swap                         *int64   `protobuf:"varint,3,req,name=swap" json:"swap,omitempty"`
	Commission                   *int64   `protobuf:"varint,4,req,name=commission" json:"commission,omitempty"`
	Balance                      *int64   `protobuf:"varint,5,req,name=balance" json:"balance,omitempty"`
	Comment                      *string  `protobuf:"bytes,6,opt,name=comment" json:"comment,omitempty"`
	StopLossPrice                *float64 `protobuf:"fixed64,7,opt,name=stopLossPrice" json:"stopLossPrice,omitempty"`
	TakeProfitPrice              *float64 `protobuf:"fixed64,8,opt,name=takeProfitPrice" json:"takeProfitPrice,omitempty"`
	QuoteToDepositConversionRate *float64 `protobuf:"fixed64,9,opt,name=quoteToDepositConversionRate" json:"quoteToDepositConversionRate,omitempty"`
	ClosedVolume                 *int64   `protobuf:"varint,10,req,name=closedVolume" json:"closedVolume,omitempty"`
	ClosedByStopOut              *bool    `protobuf:"varint,11,opt,name=closedByStopOut" json:"closedByStopOut,omitempty"`
	XXX_unrecognized             []byte   `json:"-"`
}

func (m *ProtoOAClosePositionDetails) Reset()                    { *m = ProtoOAClosePositionDetails{} }
func (m *ProtoOAClosePositionDetails) String() string            { return proto.CompactTextString(m) }
func (*ProtoOAClosePositionDetails) ProtoMessage()               {}
func (*ProtoOAClosePositionDetails) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *ProtoOAClosePositionDetails) GetEntryPrice() float64 {
	if m != nil && m.EntryPrice != nil {
		return *m.EntryPrice
	}
	return 0
}

func (m *ProtoOAClosePositionDetails) GetProfit() int64 {
	if m != nil && m.Profit != nil {
		return *m.Profit
	}
	return 0
}

func (m *ProtoOAClosePositionDetails) GetSwap() int64 {
	if m != nil && m.Swap != nil {
		return *m.Swap
	}
	return 0
}

func (m *ProtoOAClosePositionDetails) GetCommission() int64 {
	if m != nil && m.Commission != nil {
		return *m.Commission
	}
	return 0
}

func (m *ProtoOAClosePositionDetails) GetBalance() int64 {
	if m != nil && m.Balance != nil {
		return *m.Balance
	}
	return 0
}

func (m *ProtoOAClosePositionDetails) GetComment() string {
	if m != nil && m.Comment != nil {
		return *m.Comment
	}
	return ""
}

func (m *ProtoOAClosePositionDetails) GetStopLossPrice() float64 {
	if m != nil && m.StopLossPrice != nil {
		return *m.StopLossPrice
	}
	return 0
}

func (m *ProtoOAClosePositionDetails) GetTakeProfitPrice() float64 {
	if m != nil && m.TakeProfitPrice != nil {
		return *m.TakeProfitPrice
	}
	return 0
}

func (m *ProtoOAClosePositionDetails) GetQuoteToDepositConversionRate() float64 {
	if m != nil && m.QuoteToDepositConversionRate != nil {
		return *m.QuoteToDepositConversionRate
	}
	return 0
}

func (m *ProtoOAClosePositionDetails) GetClosedVolume() int64 {
	if m != nil && m.ClosedVolume != nil {
		return *m.ClosedVolume
	}
	return 0
}

func (m *ProtoOAClosePositionDetails) GetClosedByStopOut() bool {
	if m != nil && m.ClosedByStopOut != nil {
		return *m.ClosedByStopOut
	}
	return false
}

type ProtoOASpotSubscription struct {
	AccountId         *int64                         `protobuf:"varint,1,req,name=accountId" json:"accountId,omitempty"`
	SubscriptionId    *uint32                        `protobuf:"varint,2,req,name=subscriptionId" json:"subscriptionId,omitempty"`
	SymbolNames       []string                       `protobuf:"bytes,3,rep,name=symbolNames" json:"symbolNames,omitempty"`
	SubscribedSymbols []*ProtoOASubscribedSpotSymbol `protobuf:"bytes,4,rep,name=subscribedSymbols" json:"subscribedSymbols,omitempty"`
	XXX_unrecognized  []byte                         `json:"-"`
}

func (m *ProtoOASpotSubscription) Reset()                    { *m = ProtoOASpotSubscription{} }
func (m *ProtoOASpotSubscription) String() string            { return proto.CompactTextString(m) }
func (*ProtoOASpotSubscription) ProtoMessage()               {}
func (*ProtoOASpotSubscription) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *ProtoOASpotSubscription) GetAccountId() int64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *ProtoOASpotSubscription) GetSubscriptionId() uint32 {
	if m != nil && m.SubscriptionId != nil {
		return *m.SubscriptionId
	}
	return 0
}

func (m *ProtoOASpotSubscription) GetSymbolNames() []string {
	if m != nil {
		return m.SymbolNames
	}
	return nil
}

func (m *ProtoOASpotSubscription) GetSubscribedSymbols() []*ProtoOASubscribedSpotSymbol {
	if m != nil {
		return m.SubscribedSymbols
	}
	return nil
}

type ProtoOASubscribedSpotSymbol struct {
	SymbolName       *string                 `protobuf:"bytes,1,req,name=symbolName" json:"symbolName,omitempty"`
	Period           []ProtoOATrendbarPeriod `protobuf:"varint,2,rep,name=period,enum=ProtoOATrendbarPeriod" json:"period,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *ProtoOASubscribedSpotSymbol) Reset()                    { *m = ProtoOASubscribedSpotSymbol{} }
func (m *ProtoOASubscribedSpotSymbol) String() string            { return proto.CompactTextString(m) }
func (*ProtoOASubscribedSpotSymbol) ProtoMessage()               {}
func (*ProtoOASubscribedSpotSymbol) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *ProtoOASubscribedSpotSymbol) GetSymbolName() string {
	if m != nil && m.SymbolName != nil {
		return *m.SymbolName
	}
	return ""
}

func (m *ProtoOASubscribedSpotSymbol) GetPeriod() []ProtoOATrendbarPeriod {
	if m != nil {
		return m.Period
	}
	return nil
}

type ProtoOATrendbar struct {
	Open             *float64               `protobuf:"fixed64,1,opt,name=open" json:"open,omitempty"`
	Close            *float64               `protobuf:"fixed64,2,opt,name=close" json:"close,omitempty"`
	High             *float64               `protobuf:"fixed64,3,opt,name=high" json:"high,omitempty"`
	Low              *float64               `protobuf:"fixed64,4,opt,name=low" json:"low,omitempty"`
	Volume           *int64                 `protobuf:"varint,5,req,name=volume" json:"volume,omitempty"`
	UtcTimestamp     *int64                 `protobuf:"varint,6,opt,name=utcTimestamp" json:"utcTimestamp,omitempty"`
	Period           *ProtoOATrendbarPeriod `protobuf:"varint,7,opt,name=period,enum=ProtoOATrendbarPeriod,def=1" json:"period,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ProtoOATrendbar) Reset()                    { *m = ProtoOATrendbar{} }
func (m *ProtoOATrendbar) String() string            { return proto.CompactTextString(m) }
func (*ProtoOATrendbar) ProtoMessage()               {}
func (*ProtoOATrendbar) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

const Default_ProtoOATrendbar_Period ProtoOATrendbarPeriod = ProtoOATrendbarPeriod_M1

func (m *ProtoOATrendbar) GetOpen() float64 {
	if m != nil && m.Open != nil {
		return *m.Open
	}
	return 0
}

func (m *ProtoOATrendbar) GetClose() float64 {
	if m != nil && m.Close != nil {
		return *m.Close
	}
	return 0
}

func (m *ProtoOATrendbar) GetHigh() float64 {
	if m != nil && m.High != nil {
		return *m.High
	}
	return 0
}

func (m *ProtoOATrendbar) GetLow() float64 {
	if m != nil && m.Low != nil {
		return *m.Low
	}
	return 0
}

func (m *ProtoOATrendbar) GetVolume() int64 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *ProtoOATrendbar) GetUtcTimestamp() int64 {
	if m != nil && m.UtcTimestamp != nil {
		return *m.UtcTimestamp
	}
	return 0
}

func (m *ProtoOATrendbar) GetPeriod() ProtoOATrendbarPeriod {
	if m != nil && m.Period != nil {
		return *m.Period
	}
	return Default_ProtoOATrendbar_Period
}

func init() {
	proto.RegisterType((*ProtoOAPartnerDetails)(nil), "ProtoOAPartnerDetails")
	proto.RegisterType((*ProtoOAOrder)(nil), "ProtoOAOrder")
	proto.RegisterType((*ProtoOAPosition)(nil), "ProtoOAPosition")
	proto.RegisterType((*ProtoOAClosePositionDetails)(nil), "ProtoOAClosePositionDetails")
	proto.RegisterType((*ProtoOASpotSubscription)(nil), "ProtoOASpotSubscription")
	proto.RegisterType((*ProtoOASubscribedSpotSymbol)(nil), "ProtoOASubscribedSpotSymbol")
	proto.RegisterType((*ProtoOATrendbar)(nil), "ProtoOATrendbar")
	proto.RegisterEnum("ProtoOAPayloadType", ProtoOAPayloadType_name, ProtoOAPayloadType_value)
	proto.RegisterEnum("ProtoOAOrderType", ProtoOAOrderType_name, ProtoOAOrderType_value)
	proto.RegisterEnum("ProtoOAExecutionType", ProtoOAExecutionType_name, ProtoOAExecutionType_value)
	proto.RegisterEnum("ProtoOAPositionStatus", ProtoOAPositionStatus_name, ProtoOAPositionStatus_value)
	proto.RegisterEnum("ProtoOATrendbarPeriod", ProtoOATrendbarPeriod_name, ProtoOATrendbarPeriod_value)
}

var fileDescriptor3 = []byte{
	// 1447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x57, 0xc9, 0x6e, 0xdb, 0x46,
	0x18, 0x06, 0x25, 0x5b, 0x96, 0x46, 0x96, 0x38, 0xa6, 0x37, 0x7a, 0x49, 0x9a, 0x28, 0x41, 0x60,
	0xb8, 0x85, 0x10, 0x39, 0x09, 0x0a, 0xe4, 0x26, 0x4b, 0x4c, 0xa2, 0x56, 0x12, 0x59, 0x0e, 0x9d,
	0xa6, 0xbd, 0x08, 0xb4, 0x34, 0x75, 0x88, 0x52, 0x22, 0x43, 0x52, 0x49, 0xfc, 0x06, 0x3d, 0x14,
	0x05, 0x7a, 0xe9, 0xa5, 0x97, 0xf6, 0x39, 0xfa, 0x12, 0xdd, 0x7b, 0x2a, 0xd0, 0x3d, 0x5d, 0xdf,
	0xa1, 0xff, 0xcc, 0x90, 0xda, 0xac, 0x2c, 0xed, 0x89, 0xd4, 0xf7, 0x7f, 0xf3, 0xaf, 0xdf, 0x0c,
	0x47, 0x68, 0x5b, 0xf7, 0xe9, 0xa0, 0xea, 0x3b, 0x2d, 0xaf, 0x47, 0xdd, 0x16, 0x0d, 0x43, 0xfb,
	0x84, 0x86, 0x65, 0x3f, 0xf0, 0x22, 0x6f, 0x7b, 0xab, 0xe6, 0xf5, 0xfb, 0xde, 0x60, 0x8e, 0xa9,
	0xf4, 0x0a, 0x5a, 0x37, 0xd8, 0x8b, 0x5e, 0x35, 0xec, 0x20, 0x1a, 0xd0, 0xa0, 0x4e, 0x23, 0xdb,
	0x71, 0x43, 0x65, 0x15, 0xe5, 0x7d, 0x81, 0xb4, 0xed, 0x3e, 0x55, 0xa5, 0x0b, 0xa9, 0xbd, 0x5c,
	0xe9, 0xd3, 0x45, 0xb4, 0x1c, 0xd3, 0xf5, 0xa0, 0x47, 0x03, 0x45, 0x46, 0x4b, 0x1e, 0x7b, 0x69,
	0xf4, 0x38, 0x23, 0xad, 0xac, 0xa0, 0x9c, 0xdd, 0xed, 0x7a, 0xc3, 0x41, 0x04, 0x50, 0x8a, 0x43,
	0x97, 0x51, 0x8e, 0x73, 0xac, 0x53, 0x9f, 0xaa, 0x69, 0x80, 0x8a, 0x07, 0x2b, 0xe5, 0x49, 0x2f,
	0xcc, 0xa0, 0x94, 0x50, 0x2e, 0x0a, 0xec, 0x1e, 0x25, 0x4e, 0x8f, 0xaa, 0x0b, 0x9c, 0x25, 0x0b,
	0x96, 0x95, 0xc0, 0x8a, 0x82, 0x50, 0x78, 0xda, 0x3f, 0xf6, 0x5c, 0x9e, 0xd2, 0x22, 0x4b, 0x49,
	0x59, 0x43, 0xcb, 0x5d, 0xd7, 0x0b, 0x9d, 0xc1, 0x09, 0xf7, 0xa5, 0x66, 0x00, 0xcd, 0x2a, 0x9b,
	0x48, 0x0e, 0xe8, 0x83, 0x21, 0x0d, 0x23, 0xda, 0xbb, 0xeb, 0xb9, 0x43, 0xa0, 0x2f, 0xf1, 0x64,
	0x36, 0x50, 0x91, 0x3e, 0xa6, 0xdd, 0xe1, 0x18, 0xcf, 0x5e, 0x90, 0x26, 0x71, 0xc7, 0x1b, 0x18,
	0x81, 0xd3, 0xa5, 0x6a, 0x0e, 0x70, 0x89, 0x85, 0x74, 0x9d, 0xbe, 0x13, 0x09, 0x0c, 0x71, 0x0c,
	0x6a, 0x0c, 0x23, 0xcf, 0x17, 0x50, 0x9e, 0x43, 0xeb, 0xa8, 0xc0, 0xa0, 0xa6, 0x17, 0x86, 0x02,
	0x5e, 0xe6, 0x30, 0xa4, 0x11, 0xd9, 0xef, 0x52, 0x28, 0xe3, 0x9d, 0xc4, 0x45, 0x81, 0x1b, 0xb6,
	0xd0, 0xca, 0xb1, 0x1d, 0x52, 0xe2, 0x3a, 0xbe, 0x0f, 0xd3, 0x10, 0xa6, 0x22, 0x37, 0x41, 0x26,
	0x61, 0x0c, 0x37, 0x06, 0x86, 0xe3, 0x87, 0xaa, 0xcc, 0x33, 0x3c, 0x8f, 0x36, 0x02, 0xea, 0xda,
	0x91, 0xf3, 0x90, 0x92, 0x38, 0x54, 0x6c, 0xc7, 0x60, 0x5f, 0x54, 0x2e, 0x20, 0x35, 0xb1, 0x5b,
	0xa3, 0x98, 0x31, 0x63, 0x85, 0x33, 0xa0, 0x96, 0x2e, 0x08, 0xc1, 0x09, 0x43, 0x28, 0x52, 0x55,
	0xb8, 0x57, 0x48, 0xdc, 0x03, 0xe1, 0x58, 0x4e, 0x1f, 0x7a, 0x65, 0xf7, 0x7d, 0x75, 0x35, 0x69,
	0x07, 0xeb, 0x2a, 0x1d, 0xe3, 0x6b, 0x1c, 0xdf, 0x41, 0xab, 0xf4, 0xb1, 0xef, 0x04, 0x36, 0xeb,
	0xd3, 0xd8, 0xb8, 0xce, 0x8d, 0x20, 0x86, 0xee, 0x7d, 0x7b, 0x30, 0xa0, 0xae, 0xba, 0x01, 0x40,
	0x8e, 0x03, 0x10, 0x90, 0x0e, 0x22, 0x75, 0x93, 0x03, 0x37, 0xd1, 0x1a, 0x77, 0x6b, 0xc0, 0xc0,
	0x98, 0x87, 0x58, 0x6c, 0xaa, 0x0a, 0xd6, 0xfc, 0xc1, 0x6e, 0xa2, 0x8a, 0xda, 0x1c, 0x0e, 0xcb,
	0xb4, 0xeb, 0x3a, 0xe0, 0x4b, 0x8f, 0x05, 0xb7, 0x95, 0xc4, 0x60, 0x9d, 0xd7, 0x87, 0x91, 0xba,
	0x0d, 0x40, 0xb6, 0xf4, 0x24, 0x85, 0xe4, 0x44, 0xd2, 0xb1, 0x0b, 0x56, 0xb9, 0x1f, 0xbf, 0x3f,
	0x4b, 0xa9, 0x65, 0x54, 0x4c, 0x68, 0x24, 0xb2, 0xa3, 0x61, 0x18, 0xcb, 0x75, 0xa3, 0x3c, 0xe3,
	0x50, 0x58, 0xff, 0xb7, 0x66, 0x8b, 0x28, 0xf3, 0x50, 0x88, 0x2f, 0xc3, 0xe3, 0x02, 0x07, 0xea,
	0x0a, 0x4e, 0x85, 0x0c, 0x98, 0x50, 0x25, 0x65, 0x19, 0x2d, 0x84, 0x8f, 0x6c, 0x3f, 0x96, 0xe7,
	0xf4, 0xe8, 0x72, 0xf3, 0x47, 0x87, 0x12, 0x85, 0xcf, 0x8c, 0x2e, 0x9f, 0xd0, 0xff, 0x93, 0x44,
	0x27, 0xa6, 0x59, 0x9c, 0x9d, 0x26, 0x53, 0x64, 0xae, 0xf4, 0x41, 0x0a, 0xed, 0x3c, 0x6b, 0x62,
	0xd3, 0x65, 0x49, 0xbc, 0x2c, 0x28, 0xdd, 0xe7, 0xa1, 0xe2, 0x96, 0x27, 0x65, 0xa6, 0x93, 0x46,
	0x4c, 0x94, 0xb9, 0xc0, 0x31, 0x08, 0x7b, 0x6c, 0xbb, 0xf6, 0xa0, 0x2b, 0xba, 0x97, 0x9e, 0xcc,
	0x23, 0xc3, 0x13, 0x3b, 0x53, 0xd9, 0xd2, 0xd3, 0x2a, 0xcb, 0x72, 0xc3, 0x65, 0xb4, 0xfb, 0x60,
	0xe8, 0x45, 0xd4, 0xf2, 0xea, 0x94, 0xcf, 0xbb, 0xe6, 0x0d, 0x1e, 0xd2, 0x80, 0xc5, 0x34, 0xed,
	0x28, 0xd9, 0xf9, 0xf1, 0xc1, 0x32, 0x3a, 0x27, 0x44, 0x77, 0x77, 0x90, 0x2c, 0xd0, 0xc3, 0x53,
	0x12, 0xcb, 0x8e, 0xb5, 0x37, 0x7b, 0x98, 0x52, 0xa5, 0xd2, 0x47, 0x12, 0xda, 0x8c, 0x1b, 0x42,
	0x7c, 0x2f, 0x22, 0xc3, 0xe3, 0xb0, 0x1b, 0x38, 0x3e, 0x97, 0xe0, 0x94, 0xdc, 0xa4, 0x64, 0x52,
	0xe1, 0x04, 0x25, 0x96, 0x61, 0x01, 0x12, 0xcf, 0x8f, 0x25, 0xc3, 0x34, 0x98, 0xde, 0xcb, 0x31,
	0xff, 0xca, 0xab, 0x68, 0x25, 0x5e, 0x70, 0x4c, 0x7b, 0x84, 0x53, 0x42, 0xe8, 0x52, 0x7a, 0x72,
	0xef, 0x90, 0x31, 0x81, 0xa5, 0xc0, 0x49, 0xa5, 0xb7, 0x46, 0x83, 0x9a, 0x67, 0x9e, 0xd1, 0x28,
	0x3f, 0xea, 0x95, 0x2b, 0x30, 0x28, 0x1a, 0x38, 0x1e, 0x4b, 0x2a, 0x3d, 0xb9, 0x07, 0xac, 0x80,
	0x0e, 0x7a, 0xc7, 0x76, 0x60, 0x70, 0x6b, 0xe9, 0x63, 0x69, 0xb4, 0xdd, 0x12, 0x0b, 0x1b, 0x2a,
	0x53, 0x26, 0x78, 0x62, 0x8d, 0x2c, 0xa0, 0x45, 0xde, 0x32, 0x70, 0x24, 0x09, 0x61, 0xdf, 0x77,
	0x4e, 0xee, 0x43, 0x59, 0xec, 0x57, 0x1e, 0xa5, 0x5d, 0xef, 0x11, 0x14, 0x21, 0x09, 0x71, 0xc4,
	0xfb, 0x42, 0x4c, 0x1a, 0x46, 0x30, 0x8c, 0xba, 0x63, 0x21, 0x67, 0xb8, 0x90, 0xf7, 0x47, 0x99,
	0xb1, 0x39, 0x3f, 0x35, 0xb3, 0x9b, 0xa9, 0x56, 0x65, 0xff, 0xbd, 0x0c, 0x52, 0x46, 0xdf, 0xb7,
	0x53, 0xd7, 0xb3, 0x7b, 0xfc, 0x63, 0x83, 0x51, 0x5e, 0xaf, 0x76, 0xaa, 0x47, 0xd6, 0x9d, 0x8e,
	0xa9, 0xbd, 0x81, 0x3f, 0x97, 0xa7, 0x11, 0x82, 0xbf, 0x90, 0x95, 0x3d, 0x74, 0x09, 0x10, 0x72,
	0x74, 0x48, 0x6a, 0x66, 0xe3, 0x50, 0xeb, 0xdc, 0xd2, 0xcd, 0x8e, 0x65, 0x56, 0xeb, 0x8d, 0xf6,
	0xed, 0x8e, 0x76, 0x57, 0x6b, 0x5b, 0x84, 0xaf, 0xfd, 0xf2, 0x05, 0x99, 0x04, 0x7f, 0x25, 0x2b,
	0x2f, 0xa3, 0x2b, 0xc0, 0x3c, 0x6a, 0x4f, 0x70, 0x4d, 0xbd, 0x35, 0xcf, 0xed, 0xd7, 0x2f, 0x4e,
	0x26, 0xf8, 0x1b, 0x59, 0xb9, 0x84, 0xce, 0x03, 0xf9, 0xb6, 0x66, 0x8d, 0xf3, 0xa8, 0x77, 0xaa,
	0xb5, 0x9a, 0x7e, 0x94, 0x78, 0xfc, 0xf6, 0xf9, 0x24, 0x82, 0xbf, 0x93, 0x15, 0x15, 0xad, 0x02,
	0xa9, 0x66, 0x6a, 0x55, 0x4b, 0xeb, 0xe8, 0x66, 0x5d, 0x33, 0xf9, 0xf2, 0xef, 0x65, 0xd0, 0xa5,
	0x02, 0x16, 0xed, 0x9e, 0x56, 0x3b, 0xb2, 0x1a, 0x7a, 0x5b, 0x64, 0x80, 0x7f, 0x18, 0x2d, 0xa9,
	0xb6, 0x6b, 0x5a, 0x73, 0x62, 0xc9, 0x8f, 0xb2, 0xb2, 0x8d, 0xd6, 0x99, 0xa5, 0xa9, 0x13, 0xad,
	0x63, 0xe8, 0xa4, 0xc1, 0xd7, 0x31, 0xdb, 0x4f, 0x32, 0x7c, 0xb0, 0x76, 0x58, 0xcb, 0x5b, 0x5a,
	0xbb, 0x3e, 0xb6, 0x91, 0x66, 0xc7, 0x32, 0x38, 0xe3, 0xe7, 0x24, 0xa0, 0x60, 0x8c, 0xdd, 0xfe,
	0x22, 0x2b, 0x2f, 0xc1, 0x75, 0x67, 0xb6, 0xe3, 0xc4, 0xd0, 0xe3, 0x4a, 0x7f, 0x7d, 0x36, 0x81,
	0xe0, 0xdf, 0x64, 0x38, 0xba, 0xcf, 0xcd, 0x6b, 0xee, 0xd8, 0xc9, 0x93, 0xe7, 0x72, 0x08, 0xfe,
	0x5d, 0x56, 0x2e, 0xa2, 0xdd, 0xa4, 0xa5, 0x00, 0x27, 0x11, 0x8d, 0x51, 0x9d, 0x7f, 0x3c, 0x8f,
	0x42, 0xf0, 0x9f, 0x32, 0x6c, 0xb6, 0x8b, 0x31, 0xa5, 0xda, 0x6c, 0x9e, 0xa5, 0x89, 0x8c, 0xfe,
	0x7a, 0x21, 0x1e, 0xc1, 0x7f, 0xcb, 0xb0, 0xa1, 0x0b, 0xac, 0x7c, 0x66, 0x17, 0x43, 0xfa, 0x47,
	0xde, 0xef, 0x21, 0x7c, 0xe6, 0xd2, 0x55, 0x40, 0x39, 0xe0, 0xb5, 0xaa, 0xe6, 0xeb, 0x9a, 0x85,
	0xd9, 0xd6, 0xcc, 0xc2, 0xcf, 0x66, 0xa3, 0xd5, 0xb0, 0x70, 0x0a, 0xb6, 0xe6, 0x12, 0x73, 0x62,
	0xe9, 0x06, 0x66, 0x5f, 0x4b, 0xe6, 0xd1, 0x30, 0x75, 0x4b, 0xab, 0xb1, 0x50, 0x78, 0x01, 0x6e,
	0x88, 0xf2, 0x68, 0x71, 0xc7, 0xac, 0xb6, 0x6f, 0x6b, 0x78, 0x71, 0xff, 0x33, 0x09, 0xad, 0xc5,
	0x61, 0xb4, 0xe4, 0x3e, 0xc5, 0x43, 0xad, 0xa3, 0x15, 0x60, 0x8b, 0x29, 0x82, 0xe4, 0x34, 0xc3,
	0xd2, 0xea, 0x10, 0x52, 0x38, 0x11, 0xf0, 0xad, 0x46, 0xb3, 0x09, 0x60, 0x0a, 0x0e, 0x46, 0x65,
	0x04, 0x0a, 0x55, 0x31, 0x9c, 0x9d, 0x07, 0x78, 0x84, 0x6b, 0xf7, 0x8c, 0x86, 0x09, 0xe8, 0xc2,
	0x14, 0xca, 0xb5, 0x02, 0xe8, 0xe2, 0x54, 0x3c, 0x53, 0x7b, 0x0d, 0xb2, 0x06, 0x38, 0xa3, 0xec,
	0x22, 0x75, 0xc6, 0xf5, 0xd8, 0xba, 0xb4, 0xff, 0xa1, 0x34, 0xbe, 0x0e, 0x4f, 0x7f, 0xea, 0x77,
	0xd0, 0x26, 0xab, 0x7f, 0x24, 0x53, 0xab, 0x6a, 0x1d, 0x91, 0x8e, 0x6e, 0x68, 0x6d, 0x28, 0xe2,
	0x1c, 0xda, 0x9a, 0x63, 0xe4, 0xaa, 0x67, 0xe5, 0x9c, 0xe7, 0x62, 0x3c, 0x63, 0xe6, 0x3b, 0x8c,
	0x95, 0x25, 0x72, 0x9a, 0xb5, 0x6b, 0xa6, 0xa9, 0x9b, 0x78, 0x61, 0xff, 0xfd, 0x71, 0x4e, 0xd3,
	0x07, 0x9c, 0x92, 0x41, 0x70, 0xc4, 0x41, 0x78, 0xf6, 0x3c, 0x80, 0x38, 0xec, 0x79, 0x0d, 0xfc,
	0xb1, 0xe7, 0x75, 0x68, 0x0c, 0x7b, 0xde, 0x80, 0x56, 0x2c, 0xa1, 0x74, 0xab, 0x72, 0x15, 0x8a,
	0xe7, 0x2f, 0x37, 0xf0, 0x12, 0x7f, 0xb9, 0x76, 0x15, 0x67, 0x19, 0xe5, 0x4e, 0x05, 0xe7, 0xf8,
	0xf3, 0x3a, 0x46, 0xcc, 0x70, 0xa7, 0x72, 0x80, 0xf3, 0x0c, 0xa8, 0x57, 0xf0, 0x32, 0x7b, 0xbe,
	0x59, 0xc1, 0x05, 0xbe, 0xa2, 0x5d, 0xc1, 0xc5, 0x43, 0x82, 0xf6, 0xe0, 0xeb, 0x5b, 0x7e, 0xcc,
	0x2f, 0x3e, 0x81, 0xf8, 0x17, 0xd1, 0xf5, 0x5c, 0xf1, 0x52, 0x66, 0xc7, 0xbe, 0xed, 0x3b, 0xe5,
	0x3e, 0xfb, 0xab, 0x71, 0x78, 0x0e, 0x3e, 0xac, 0x70, 0x15, 0x80, 0xff, 0x10, 0xf3, 0xfe, 0x9c,
	0x18, 0xd2, 0xdb, 0xe9, 0x7e, 0x78, 0xf2, 0x89, 0x24, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xb7,
	0xa4, 0x3c, 0x25, 0xbd, 0x0c, 0x00, 0x00,
}
